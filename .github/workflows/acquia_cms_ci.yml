name: "Acquia CMS CI"
on:
  push:
#    branches: [ develop, qa, stage, main, ACMS* ]
    paths-ignore:
      - README.md
  pull_request:
#    branches: [ develop ]
    paths-ignore:
      - README.md
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # Site test artifacts.
      ACMS_DB_ARTIFACT: "/home/runner/work/acquia_cms/acquia_cms/tests/acms.sql.gz"
      ACMS_FILES_ARTIFACT: "/home/runner/work/acquia_cms/acquia_cms/tests/acms-files.tar.gz"
      ACMS_STARTER_DB_ARTIFACT: "/home/runner/work/acquia_cms/acquia_cms/tests/acms-starter.sql.gz"
      ACMS_STARTER_FILES_ARTIFACT: "/home/runner/work/acquia_cms/acquia_cms/tests/acms-files-starter.tar.gz"
      # Provide your package's name.
      ORCA_SUT_NAME: acquia/acquia_cms
      ORCA_SUT_BRANCH: develop
      ORCA_VERSION: ^3.0
      ORCA_PACKAGES_CONFIG_ALTER: ../acquia_cms/tests/packages_alter.yml
      ORCA_ENABLE_NIGHTWATCH: "FALSE"
      ORCA_PHPCS_STANDARD: AcquiaPHP
      ORCA_SUT_DIR: /home/runner/work/acquia_cms/acquia_cms
      COMPOSER_PROCESS_TIMEOUT: 1800
      ORCA_JOB: ${{ matrix.orca-job }}
      ACMS_JOB: ${{ matrix.acms-job}}
      AWS_S3_BUCKET_PATH: s3://acquia-cms-artifacts/backstop
      ACMS__JOB_EXCLUDE_PHPUNIT_TEST_GROUP: ${{ matrix.exclude-phpunit-group }}
      # Set Required API Keys.
      CONNECTOR_ID: ${{ secrets.CONNECTOR_ID }}
      GMAPS_KEY: ${{ secrets.GMAPS_KEY }}
      SEARCH_UUID: ${{ secrets.SEARCH_UUID }}
      SITESTUDIO_API_KEY: ${{ secrets.SITESTUDIO_API_KEY }}
      SITESTUDIO_ORG_KEY: ${{ secrets.SITESTUDIO_ORG_KEY }}
    strategy:
      matrix:
        orca-job:
          - STATIC_CODE_ANALYSIS
          - STRICT_DEPRECATED_CODE_SCAN
          - ISOLATED_TEST_ON_CURRENT_DEV
        #php-version: [ "7.4" ]
        acms-job:
          - starter
          - base
        exclude-phpunit-group:
          - ${{ github.event_name }}
        include:
          - orca-job: STATIC_CODE_ANALYSIS
          - orca-job: STRICT_DEPRECATED_CODE_SCAN
        exclude:
          - orca-job: STATIC_CODE_ANALYSIS
            acms-job: "starter"
            exclude-phpunit-group: ${{ github.event_name }}
          - orca-job: STATIC_CODE_ANALYSIS
            acms-job: "base"
            exclude-phpunit-group: ${{ github.event_name }}
          - orca-job: STRICT_DEPRECATED_CODE_SCAN
            acms-job: "starter"
            exclude-phpunit-group: ${{ github.event_name }}
          - orca-job: STRICT_DEPRECATED_CODE_SCAN
            acms-job: "base"
            exclude-phpunit-group: ${{ github.event_name }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 12.13.1
        uses: actions/setup-node@v3
        with:
          node-version: 12.13.1
      - uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          #coverage: xdebug
      - name: Setup MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE drupal;' -uroot -proot
          mysql -e 'SHOW DATABASES;' -uroot -proot
          mysql -e 'CREATE USER "drupal"@"localhost" IDENTIFIED BY "drupal";' -uroot -proot
          mysql -e 'GRANT ALL PRIVILEGES ON *.* TO "drupal"@"localhost" WITH GRANT OPTION;' -uroot -proot
          mysql -e 'FLUSH PRIVILEGES;' -uroot -proot
          mysql -e 'SHOW GRANTS FOR "drupal"@"localhost";' -uroot -proot
      - name: Download ORCA
        run: |
          composer self-update
          composer create-project --no-dev --ignore-platform-req=php acquia/orca ../orca "$ORCA_VERSION" -n
          curl https://gist.githubusercontent.com/vishalkhode1/56497e23daa300d0634139828e98cb04/raw/bb6ecb370acb2c73d70bff4d77ae39ba17f51b23/merge_plugin.patch | git -C ../orca apply
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Before Install
        run: |
          # Remove internal module dependencies, so that ORCA CI doesn't report error.
          if [ "${ORCA_JOB}" != "STATIC_CODE_ANALYSIS" ]; then for path in $(find modules -type f -maxdepth 2 -name "composer.json" -exec ls '{}' ';'); do sed -i '/\"drupal\/acquia_cms.*\":.*\".*\"/d' $path; done; fi
          if [ "${ACMS_JOB}" = "starter" ] || [ "${ACMS_JOB}" = "starter_full" ] || [ "${ACMS_JOB}" = "base" ]; then aws s3 cp --recursive ${AWS_S3_BUCKET_PATH}/artifacts/ ${ORCA_SUT_DIR}/tests/; fi
          if [ ! -z ${ACMS__JOB_EXCLUDE_PHPUNIT_TEST_GROUP} ]; then
            if [ "${ACMS__JOB_EXCLUDE_PHPUNIT_TEST_GROUP}" != "push" ]; then
              export ACMS__JOB_EXCLUDE_PHPUNIT_TEST_GROUP="pr"
            fi
            find ./ -type f | xargs grep -l "@group $ACMS__JOB_EXCLUDE_PHPUNIT_TEST_GROUP$" | xargs rm -v;
          fi
          ../orca/bin/ci/before_install.sh
      - name: Install
        run: ./tests/travis/install.sh
      - name: Before script
        run: ../orca/bin/ci/before_script.sh
      - name: Script
        run: ./tests/travis/script.sh
      - name: Before Cache
        run : ../orca/bin/ci/before_cache.sh
      - name: After script
        run: |
          ../orca/bin/ci/after_success.sh
          ../orca/bin/ci/after_failure.sh
          ../orca/bin/ci/after_script.sh
